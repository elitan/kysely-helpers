name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: pgvector/pgvector:pg17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: kysely_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build package
        run: bun run build

      - name: Run TypeScript type checking
        run: bun run typecheck

      - name: Run unit tests
        run: bun run test

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Initialize test database
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d kysely_test -f tests/integration/init.sql
        env:
          PGPASSWORD: postgres

      - name: Run integration tests
        run: bun run test:integration
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/kysely_test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run linter
        run: bun run lint
        continue-on-error: true

  build-and-package:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build package
        run: bun run build

      - name: Check package contents
        run: |
          echo "Package contents:"
          ls -la dist/
          echo ""
          echo "Package.json files:"
          cat package.json | jq '.files'

      - name: Verify build output
        run: |
          if [ ! -f "dist/index.js" ] || [ ! -f "dist/index.mjs" ] || [ ! -f "dist/index.d.ts" ]; then
            echo "Missing required build outputs"
            exit 1
          fi