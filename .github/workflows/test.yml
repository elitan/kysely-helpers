name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: pgvector/pgvector:pg17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kysely_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Type check
        run: bun run typecheck

      - name: Build
        run: bun run build

      - name: Run unit tests
        run: bun run test

      - name: Setup database
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          
          PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d kysely_test -c "CREATE EXTENSION IF NOT EXISTS vector;"
          
          if [ -f tests/integration/init.sql ]; then
            PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d kysely_test -f tests/integration/init.sql
          fi

      - name: Run integration tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/kysely_test
        run: bun run test:integration

      - name: Run all tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/kysely_test
        run: bun run test:all

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint
        run: bun run lint
        continue-on-error: true